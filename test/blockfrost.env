# Blockfrost test suite configuration.
#
# This file specifies some environment variables that can be read by
# `executePlutipTestsWithBlockfrost` function to run plutip tests using
# Blockfrost.
#
# Follow the guide below to configure the test suite.

# 0. Go to https://blockfrost.io to generate a new API key
export BLOCKFROST_API_KEY=

# 1. Follow https://developers.cardano.org/docs/stake-pool-course/handbook/keys-addresses/
#    to generate a private payment key (and, optionally, a stake key).
#
#    It should look like this:
#
#    {
#        "type": "PaymentSigningKeyShelley_ed25519",
#        "description": "Payment Signing Key",
#        "cborHex": "..."
#    }
#
#    Get the address for this payment key (and, optionally, a stake key)
#
#    If you are using a testnet, replace `--mainnet` flag in the guide with
#    `--testnet-magic YOUR_NETWORK_MAGIC`, where YOUR_NETWORK_MAGIC is a genesis
#    parameter of the network.
#
#    For public testnets, get it from cardano-configurations repo:
#
#    https://github.com/input-output-hk/cardano-configurations
#
#    The location is `network/YOUR_NETWORK_NAME/genesis/shelley.json`,
#    look for `networkMagic` key.
#
#    The common values are 1 for `preprod` and 2 for `preview`

# 2. Fund your address using the testnet faucet:
#
#    https://docs.cardano.org/cardano-testnet/tools/faucet
#
#    Make sure you are sending the funds in the same network

# 3. Set the variable below to your `payment.skey` location
export PRIVATE_PAYMENT_KEY_FILE=

# 4. Set the variable below to your `stake.skey` location, if and only if you have used
#    it for address generation
export PRIVATE_STAKE_KEY_FILE=

# 5. Set this variable to an existing directory where the temporary keys will be stored
export BACKUP_KEYS_DIR=./test-data/keys/

# 6. Provide the configuration of the Blockfrost API endpoint URL below.
#    Make sure that the API endpoint corresponds to the same network you used
#    to fund the wallet
export BLOCKFROST_PORT=443 # https -> 443, http -> 80
export BLOCKFROST_HOST=cardano-preview.blockfrost.io
export BLOCKFROST_SECURE=true # Use HTTPS
export BLOCKFROST_PATH="/api/v0"

# Extra configuraiton parameters

# If you tests are failing because the effects of the transaction do not seem
# to propagate, try increasing this delay. Blockfrost does not update the query
# layer state consistently, so this is the best workaround we can offer.
export TX_CONFIRMATION_DELAY_SECONDS=20
